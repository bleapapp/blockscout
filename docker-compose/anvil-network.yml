version: '3.9'

services:
  # Pimlico Infra (Node + Paymaster + Bundler)
  anvil:
    image: ghcr.io/foundry-rs/foundry:master
    ports: [ "8545:8545" ]
    entrypoint: [ "anvil", "--host", "0.0.0.0" ]
    platform: linux/amd64/v8

  mock-paymaster:
    image: ghcr.io/pimlicolabs/mock-verifying-paymaster:main
    ports: [ "3000:3000" ]
    environment:
      - ALTO_RPC=http://alto:4337
      - ANVIL_RPC=http://anvil:8545

  alto:
    image: ghcr.io/pimlicolabs/mock-alto-bundler:main
    ports: [ "4337:4337" ]
    environment:
      - ANVIL_RPC=http://anvil:8545
      - ALTO_BALANCE_OVERRIDE=false

  # Blockscout Infra
  redis-db:
    depends_on:
      - anvil
      - mock-paymaster
      - alto
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    depends_on:
      - anvil
      - mock-paymaster
      - alto
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8545/
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
        INDEXER_INTERNAL_TRANSACTIONS_TRACER_TYPE: 'opcode'
        CHAIN_ID: '31337'

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend
    environment:
      NEXT_PUBLIC_NETWORK_ID: '31337'
      NEXT_PUBLIC_NETWORK_RPC_URL: http://localhost:8545/

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy

  sc-verifier:
    extends:
      file: ./services/smart-contract-verifier.yml
      service: smart-contract-verifier
    ports:
      - 8082:8050
